server:
  port: 8084

spring:
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5435/order-db}
    driver-class-name: org.postgresql.Driver
    username: ${DB_USER:postgres}
    password: ${DB_PASS:postgres}
    hikari:
      connection-timeout: 20000
      maximum-pool-size: 5
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          lob:
            non_contextual_creation: true

    hibernate:
      ddl-auto: update
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl

    show-sql: true

    open-in-view: false

  application:
    name: order-service

  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

  kafka:
    bootstrap-servers: ${KAFKA_URL:localhost:9092}
    consumer:
      group-id: orderGroup,orderEmailGroup

eureka:
  client:
    serviceUrl:
      defaultZone: ${EUREKA_URL:http://localhost:8761/eureka}

management:
  tracing:
    sampling:
      probability: 1.0
  zipkin:
    tracing:
      endpoint: ${ZIPKIN_URL:http://localhost:9411/api/v2/spans}
  endpoints:
    web:
      exposure:
        include: prometheus

logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
